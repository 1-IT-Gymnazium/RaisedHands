{
  "api/RaisedHands.Api.BackgroundServices.EmailSenderBackgroundService.html": {
    "href": "api/RaisedHands.Api.BackgroundServices.EmailSenderBackgroundService.html",
    "title": "Class EmailSenderBackgroundService | RaisedHands",
    "keywords": "Class EmailSenderBackgroundService Namespace RaisedHands.Api.BackgroundServices Assembly RaisedHands.Api.dll public class EmailSenderBackgroundService : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService EmailSenderBackgroundService Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.StopAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EmailSenderBackgroundService(IServiceProvider) public EmailSenderBackgroundService(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Methods ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Triggered when StopAsync(CancellationToken) is called. Returns Task A Task that represents the long running operations. Remarks See Worker Services in .NET for implementation guidelines."
  },
  "api/RaisedHands.Api.BackgroundServices.html": {
    "href": "api/RaisedHands.Api.BackgroundServices.html",
    "title": "Namespace RaisedHands.Api.BackgroundServices | RaisedHands",
    "keywords": "Namespace RaisedHands.Api.BackgroundServices Classes EmailSenderBackgroundService"
  },
  "api/RaisedHands.Api.Controllers.AuthController.html": {
    "href": "api/RaisedHands.Api.Controllers.AuthController.html",
    "title": "Class AuthController | RaisedHands",
    "keywords": "Class AuthController Namespace RaisedHands.Api.Controllers Assembly RaisedHands.Api.dll [ApiController] public class AuthController : ControllerBase Inheritance object ControllerBase AuthController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthController(IClock, UserManager<User>, SignInManager<User>, EmailSenderService) public AuthController(IClock clock, UserManager<User> userManager, SignInManager<User> signInManager, EmailSenderService emailSenderService) Parameters clock IClock userManager UserManager<User> signInManager SignInManager<User> emailSenderService EmailSenderService Methods Login(LoginModel) [HttpPost(\"api/v1/Auth/Login\")] public Task<ActionResult> Login(LoginModel model) Parameters model LoginModel Returns Task<ActionResult> Logout() [Authorize] [HttpPost(\"api/v1/Auth/Logout\")] public Task<ActionResult> Logout() Returns Task<ActionResult> Register(RegisterModel) [HttpPost(\"api/v1/Auth/Register\")] [ProducesResponseType(204)] [ProducesResponseType(400)] public Task<ActionResult> Register(RegisterModel model) Parameters model RegisterModel Returns Task<ActionResult> TestMeBeforeLoginAndAfter() [Authorize] [HttpGet(\"api/v1/Auth/TestMeBeforeLoginAndAfter\")] public ActionResult TestMeBeforeLoginAndAfter() Returns ActionResult ValidateToken(TokenModel) unescape token before sending [HttpPost(\"api/v1/Auth/ValidateToken\")] public Task<ActionResult> ValidateToken(TokenModel model) Parameters model TokenModel Returns Task<ActionResult>"
  },
  "api/RaisedHands.Api.Controllers.GroupController.html": {
    "href": "api/RaisedHands.Api.Controllers.GroupController.html",
    "title": "Class GroupController | RaisedHands",
    "keywords": "Class GroupController Namespace RaisedHands.Api.Controllers Assembly RaisedHands.Api.dll [Authorize] [ApiController] public class GroupController : ControllerBase Inheritance object ControllerBase GroupController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GroupController(IClock, AppDbContext) public GroupController(IClock clock, AppDbContext dbContext) Parameters clock IClock dbContext AppDbContext Methods AddCurrentUserToGroupByCode(string) Adds the current user to a group using the group's unique code. If the user does not have the \"Student\" role, it is assigned. [HttpPost(\"api/v1/Group/{code}/AddUser\")] public Task<ActionResult> AddCurrentUserToGroupByCode(string code) Parameters code string The unique code of the group to join. Returns Task<ActionResult> A confirmation message on successful addition. Create(GroupCreateModel) Creates a new group with a unique code and links the current user as the owner with the \"Teacher\" role. [HttpPost(\"api/v1/Group\")] public Task<ActionResult> Create(GroupCreateModel model) Parameters model GroupCreateModel The model containing details for the new group. Returns Task<ActionResult> The details of the created group. Delete(Guid) Soft-deletes a group by marking it as deleted in the database. [HttpDelete(\"api/v1/Group/{id}\")] public Task<ActionResult> Delete(Guid id) Parameters id Guid The unique identifier of the group to delete. Returns Task<ActionResult> No content if successful. Get(Guid) Retrieves the details of a specific group by its ID. [HttpGet(\"api/v1/Group/{id}\")] public Task<ActionResult<GroupDetailModel>> Get(Guid id) Parameters id Guid The unique identifier of the group. Returns Task<ActionResult<GroupDetailModel>> The details of the specified group. GetList() Retrieves a list of all groups, including their associated rooms and owners. [HttpGet(\"api/v1/Group\")] public Task<ActionResult<IEnumerable<GroupDetailModel>>> GetList() Returns Task<ActionResult<IEnumerable<GroupDetailModel>>> A list of GroupDetailModel representing all groups. GetRoomsByGroupId(Guid) Retrieves a list of room details for a specified group by its unique ID. [HttpGet(\"api/v1/Group/{groupId}/Rooms\")] public Task<ActionResult<IEnumerable<RoomDetailModel>>> GetRoomsByGroupId(Guid groupId) Parameters groupId Guid The unique identifier of the group. Returns Task<ActionResult<IEnumerable<RoomDetailModel>>> A list of RoomDetailModel objects representing the group's rooms, or a 404 response if the group is not found. GetUserGroups() Retrieves all groups where the current user has a role. [HttpGet(\"api/v1/Group/my-groups\")] public Task<ActionResult<IEnumerable<GroupDetailModel>>> GetUserGroups() Returns Task<ActionResult<IEnumerable<GroupDetailModel>>> A list of GroupDetailModel objects representing the user's groups, or a 404 response if no groups are found, or a 401 response for unauthorized access. Update(Guid, JsonPatchDocument<GroupCreateModel>) Updates specific properties of a group using a JSON Patch document. [HttpPatch(\"api/v1/Group/{id}\")] public Task<ActionResult<GroupDetailModel>> Update(Guid id, JsonPatchDocument<GroupCreateModel> patch) Parameters id Guid The unique identifier of the group to update. patch JsonPatchDocument<GroupCreateModel> The JSON Patch document containing the updates. Returns Task<ActionResult<GroupDetailModel>> The updated details of the group."
  },
  "api/RaisedHands.Api.Controllers.QuestionController.html": {
    "href": "api/RaisedHands.Api.Controllers.QuestionController.html",
    "title": "Class QuestionController | RaisedHands",
    "keywords": "Class QuestionController Namespace RaisedHands.Api.Controllers Assembly RaisedHands.Api.dll [Authorize] [ApiController] public class QuestionController : ControllerBase Inheritance object ControllerBase QuestionController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors QuestionController(IHubContext<QuestionHub>, IClock, AppDbContext) public QuestionController(IHubContext<QuestionHub> hubContext, IClock clock, AppDbContext dbContext) Parameters hubContext IHubContext<QuestionHub> clock IClock dbContext AppDbContext Methods Create(QuestionCreateModel) [HttpPost(\"api/v1/Question\")] public Task<ActionResult> Create(QuestionCreateModel model) Parameters model QuestionCreateModel Returns Task<ActionResult> GetQuestionsByRoomId(Guid) [HttpGet(\"api/v1/Question/{roomId}\")] public Task<ActionResult<QuestionDetailModel>> GetQuestionsByRoomId(Guid roomId) Parameters roomId Guid Returns Task<ActionResult<QuestionDetailModel>>"
  },
  "api/RaisedHands.Api.Controllers.RoomController.html": {
    "href": "api/RaisedHands.Api.Controllers.RoomController.html",
    "title": "Class RoomController | RaisedHands",
    "keywords": "Class RoomController Namespace RaisedHands.Api.Controllers Assembly RaisedHands.Api.dll [Authorize] [ApiController] public class RoomController : ControllerBase Inheritance object ControllerBase RoomController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RoomController(ILogger<RoomController>, IClock, AppDbContext) public RoomController(ILogger<RoomController> logger, IClock clock, AppDbContext dbContext) Parameters logger ILogger<RoomController> clock IClock dbContext AppDbContext Methods Create(RoomCreateModel) Creates a new room and associates it with a specified group. [HttpPost(\"api/v1/Room\")] public Task<ActionResult> Create(RoomCreateModel model) Parameters model RoomCreateModel The model containing details for the new room. Returns Task<ActionResult> A success response upon creation. Delete(Guid) Soft-deletes a room by marking it as deleted in the database. [HttpDelete(\"api/v1/Room/{id}\")] public Task<ActionResult> Delete(Guid id) Parameters id Guid The unique identifier of the room to delete. Returns Task<ActionResult> No content if successful. Get(Guid) Retrieves the details of a specific room by its ID. [HttpGet(\"api/v1/Room/{id}\")] public Task<ActionResult<RoomDetailModel>> Get(Guid id) Parameters id Guid The unique identifier of the room. Returns Task<ActionResult<RoomDetailModel>> The details of the specified room. GetList() Retrieves a list of all rooms. [HttpGet(\"api/v1/Room\")] public Task<ActionResult<IEnumerable<RoomDetailModel>>> GetList() Returns Task<ActionResult<IEnumerable<RoomDetailModel>>> A list of RoomDetailModel representing all rooms. Update(Guid, JsonPatchDocument<RoomCreateModel>) Updates specific properties of a room using a JSON Patch document. [HttpPatch(\"api/v1/Room/{id}\")] public Task<ActionResult> Update(Guid id, JsonPatchDocument<RoomCreateModel> patch) Parameters id Guid The unique identifier of the room to update. patch JsonPatchDocument<RoomCreateModel> The JSON Patch document containing the updates. Returns Task<ActionResult> The updated details of the room."
  },
  "api/RaisedHands.Api.Controllers.html": {
    "href": "api/RaisedHands.Api.Controllers.html",
    "title": "Namespace RaisedHands.Api.Controllers | RaisedHands",
    "keywords": "Namespace RaisedHands.Api.Controllers Classes AuthController GroupController QuestionController RoomController"
  },
  "api/RaisedHands.Api.Hubs.QuestionHub.html": {
    "href": "api/RaisedHands.Api.Hubs.QuestionHub.html",
    "title": "Class QuestionHub | RaisedHands",
    "keywords": "Class QuestionHub Namespace RaisedHands.Api.Hubs Assembly RaisedHands.Api.dll public class QuestionHub : Hub, IDisposable Inheritance object Hub QuestionHub Implements IDisposable Inherited Members Hub.OnConnectedAsync() Hub.OnDisconnectedAsync(Exception) Hub.Dispose(bool) Hub.Dispose() Hub.Clients Hub.Context Hub.Groups object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SendMessage(string) public Task SendMessage(string message) Parameters message string Returns Task"
  },
  "api/RaisedHands.Api.Hubs.html": {
    "href": "api/RaisedHands.Api.Hubs.html",
    "title": "Namespace RaisedHands.Api.Hubs | RaisedHands",
    "keywords": "Namespace RaisedHands.Api.Hubs Classes QuestionHub"
  },
  "api/RaisedHands.Api.Models.Auth.LoginModel.html": {
    "href": "api/RaisedHands.Api.Models.Auth.LoginModel.html",
    "title": "Class LoginModel | RaisedHands",
    "keywords": "Class LoginModel Namespace RaisedHands.Api.Models.Auth Assembly RaisedHands.Api.dll public class LoginModel Inheritance object LoginModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email [Required] [EmailAddress] public string Email { get; set; } Property Value string Password [Required] public string Password { get; set; } Property Value string"
  },
  "api/RaisedHands.Api.Models.Auth.RegisterModel.html": {
    "href": "api/RaisedHands.Api.Models.Auth.RegisterModel.html",
    "title": "Class RegisterModel | RaisedHands",
    "keywords": "Class RegisterModel Namespace RaisedHands.Api.Models.Auth Assembly RaisedHands.Api.dll public class RegisterModel Inheritance object RegisterModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email [Required] [EmailAddress] public string Email { get; set; } Property Value string FirstName [Required] public string FirstName { get; set; } Property Value string LastName [Required] public string LastName { get; set; } Property Value string Password [Required] public string Password { get; set; } Property Value string"
  },
  "api/RaisedHands.Api.Models.Auth.TokenModel.html": {
    "href": "api/RaisedHands.Api.Models.Auth.TokenModel.html",
    "title": "Class TokenModel | RaisedHands",
    "keywords": "Class TokenModel Namespace RaisedHands.Api.Models.Auth Assembly RaisedHands.Api.dll public class TokenModel Inheritance object TokenModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email [Required] [EmailAddress] public string Email { get; set; } Property Value string Token [Required] public string Token { get; set; } Property Value string"
  },
  "api/RaisedHands.Api.Models.Auth.html": {
    "href": "api/RaisedHands.Api.Models.Auth.html",
    "title": "Namespace RaisedHands.Api.Models.Auth | RaisedHands",
    "keywords": "Namespace RaisedHands.Api.Models.Auth Classes LoginModel RegisterModel TokenModel"
  },
  "api/RaisedHands.Api.Models.Groups.GroupCreateModel.html": {
    "href": "api/RaisedHands.Api.Models.Groups.GroupCreateModel.html",
    "title": "Class GroupCreateModel | RaisedHands",
    "keywords": "Class GroupCreateModel Namespace RaisedHands.Api.Models.Groups Assembly RaisedHands.Api.dll public class GroupCreateModel Inheritance object GroupCreateModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name [Required(ErrorMessage = \"{0} is required.\", AllowEmptyStrings = false)] public string Name { get; set; } Property Value string"
  },
  "api/RaisedHands.Api.Models.Groups.GroupCreateModelExtensions.html": {
    "href": "api/RaisedHands.Api.Models.Groups.GroupCreateModelExtensions.html",
    "title": "Class GroupCreateModelExtensions | RaisedHands",
    "keywords": "Class GroupCreateModelExtensions Namespace RaisedHands.Api.Models.Groups Assembly RaisedHands.Api.dll public static class GroupCreateModelExtensions Inheritance object GroupCreateModelExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToUpdate(Group) public static GroupCreateModel ToUpdate(this Group source) Parameters source Group Returns GroupCreateModel"
  },
  "api/RaisedHands.Api.Models.Groups.GroupDetailModel.html": {
    "href": "api/RaisedHands.Api.Models.Groups.GroupDetailModel.html",
    "title": "Class GroupDetailModel | RaisedHands",
    "keywords": "Class GroupDetailModel Namespace RaisedHands.Api.Models.Groups Assembly RaisedHands.Api.dll public class GroupDetailModel Inheritance object GroupDetailModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Rooms public List<RoomDetailModel>? Rooms Field Value List<RoomDetailModel> Properties Code public string Code { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid Name public string Name { get; set; } Property Value string Owner public UserDetailModel Owner { get; set; } Property Value UserDetailModel"
  },
  "api/RaisedHands.Api.Models.Groups.GroupDetailModelExtensions.html": {
    "href": "api/RaisedHands.Api.Models.Groups.GroupDetailModelExtensions.html",
    "title": "Class GroupDetailModelExtensions | RaisedHands",
    "keywords": "Class GroupDetailModelExtensions Namespace RaisedHands.Api.Models.Groups Assembly RaisedHands.Api.dll public static class GroupDetailModelExtensions Inheritance object GroupDetailModelExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToDetail(Group) public static GroupDetailModel ToDetail(this Group source) Parameters source Group Returns GroupDetailModel"
  },
  "api/RaisedHands.Api.Models.Groups.html": {
    "href": "api/RaisedHands.Api.Models.Groups.html",
    "title": "Namespace RaisedHands.Api.Models.Groups | RaisedHands",
    "keywords": "Namespace RaisedHands.Api.Models.Groups Classes GroupCreateModel GroupCreateModelExtensions GroupDetailModel GroupDetailModelExtensions"
  },
  "api/RaisedHands.Api.Models.Hands.HandDetailModel.html": {
    "href": "api/RaisedHands.Api.Models.Hands.HandDetailModel.html",
    "title": "Class HandDetailModel | RaisedHands",
    "keywords": "Class HandDetailModel Namespace RaisedHands.Api.Models.Hands Assembly RaisedHands.Api.dll public class HandDetailModel Inheritance object HandDetailModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Answered public bool Answered { get; set; } Property Value bool DateTime public DateTime DateTime { get; set; } Property Value DateTime UserRoleGroup public UserRoleGroup UserRoleGroup { get; set; } Property Value UserRoleGroup"
  },
  "api/RaisedHands.Api.Models.Hands.html": {
    "href": "api/RaisedHands.Api.Models.Hands.html",
    "title": "Namespace RaisedHands.Api.Models.Hands | RaisedHands",
    "keywords": "Namespace RaisedHands.Api.Models.Hands Classes HandDetailModel"
  },
  "api/RaisedHands.Api.Models.IdNameModel.html": {
    "href": "api/RaisedHands.Api.Models.IdNameModel.html",
    "title": "Class IdNameModel | RaisedHands",
    "keywords": "Class IdNameModel Namespace RaisedHands.Api.Models Assembly RaisedHands.Api.dll public class IdNameModel Inheritance object IdNameModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public Guid Id { get; set; } Property Value Guid Name public string Name { get; set; } Property Value string"
  },
  "api/RaisedHands.Api.Models.Questions.QuestionCreateModel.html": {
    "href": "api/RaisedHands.Api.Models.Questions.QuestionCreateModel.html",
    "title": "Class QuestionCreateModel | RaisedHands",
    "keywords": "Class QuestionCreateModel Namespace RaisedHands.Api.Models.Questions Assembly RaisedHands.Api.dll public class QuestionCreateModel Inheritance object QuestionCreateModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsAnonymous public bool IsAnonymous { get; set; } Property Value bool RoomId [Required(ErrorMessage = \"{0} is required.\", AllowEmptyStrings = false)] public Guid RoomId { get; set; } Property Value Guid Text [Required(ErrorMessage = \"{0} is required.\", AllowEmptyStrings = false)] public string Text { get; set; } Property Value string UserRoleGroupId public Guid? UserRoleGroupId { get; set; } Property Value Guid?"
  },
  "api/RaisedHands.Api.Models.Questions.QuestionDetailModel.html": {
    "href": "api/RaisedHands.Api.Models.Questions.QuestionDetailModel.html",
    "title": "Class QuestionDetailModel | RaisedHands",
    "keywords": "Class QuestionDetailModel Namespace RaisedHands.Api.Models.Questions Assembly RaisedHands.Api.dll public class QuestionDetailModel Inheritance object QuestionDetailModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Answered public bool Answered { get; set; } Property Value bool DateTime public DateTime DateTime { get; set; } Property Value DateTime Room public Room Room { get; set; } Property Value Room Text public string Text { get; set; } Property Value string UserRoleGroup public UserRoleGroup UserRoleGroup { get; set; } Property Value UserRoleGroup"
  },
  "api/RaisedHands.Api.Models.Questions.html": {
    "href": "api/RaisedHands.Api.Models.Questions.html",
    "title": "Namespace RaisedHands.Api.Models.Questions | RaisedHands",
    "keywords": "Namespace RaisedHands.Api.Models.Questions Classes QuestionCreateModel QuestionDetailModel"
  },
  "api/RaisedHands.Api.Models.Rooms.RoomCreateModel.html": {
    "href": "api/RaisedHands.Api.Models.Rooms.RoomCreateModel.html",
    "title": "Class RoomCreateModel | RaisedHands",
    "keywords": "Class RoomCreateModel Namespace RaisedHands.Api.Models.Rooms Assembly RaisedHands.Api.dll public class RoomCreateModel Inheritance object RoomCreateModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties GroupId [Required(ErrorMessage = \"{0} is required.\", AllowEmptyStrings = false)] public Guid GroupId { get; set; } Property Value Guid Name [Required(ErrorMessage = \"{0} is required.\", AllowEmptyStrings = false)] public string Name { get; set; } Property Value string"
  },
  "api/RaisedHands.Api.Models.Rooms.RoomCreateModelExtensions.html": {
    "href": "api/RaisedHands.Api.Models.Rooms.RoomCreateModelExtensions.html",
    "title": "Class RoomCreateModelExtensions | RaisedHands",
    "keywords": "Class RoomCreateModelExtensions Namespace RaisedHands.Api.Models.Rooms Assembly RaisedHands.Api.dll public static class RoomCreateModelExtensions Inheritance object RoomCreateModelExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToUpdate(Room) public static RoomCreateModel ToUpdate(this Room source) Parameters source Room Returns RoomCreateModel"
  },
  "api/RaisedHands.Api.Models.Rooms.RoomDetailModel.html": {
    "href": "api/RaisedHands.Api.Models.Rooms.RoomDetailModel.html",
    "title": "Class RoomDetailModel | RaisedHands",
    "keywords": "Class RoomDetailModel Namespace RaisedHands.Api.Models.Rooms Assembly RaisedHands.Api.dll public class RoomDetailModel Inheritance object RoomDetailModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DateTime public DateTime DateTime { get; set; } Property Value DateTime EndDate public DateTime? EndDate { get; set; } Property Value DateTime? GroupId public Group GroupId { get; set; } Property Value Group Id public Guid Id { get; set; } Property Value Guid Name public string Name { get; set; } Property Value string"
  },
  "api/RaisedHands.Api.Models.Rooms.RoomDetailModelExtensions.html": {
    "href": "api/RaisedHands.Api.Models.Rooms.RoomDetailModelExtensions.html",
    "title": "Class RoomDetailModelExtensions | RaisedHands",
    "keywords": "Class RoomDetailModelExtensions Namespace RaisedHands.Api.Models.Rooms Assembly RaisedHands.Api.dll public static class RoomDetailModelExtensions Inheritance object RoomDetailModelExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToDetail(Room) public static RoomDetailModel ToDetail(this Room source) Parameters source Room Returns RoomDetailModel"
  },
  "api/RaisedHands.Api.Models.Rooms.html": {
    "href": "api/RaisedHands.Api.Models.Rooms.html",
    "title": "Namespace RaisedHands.Api.Models.Rooms | RaisedHands",
    "keywords": "Namespace RaisedHands.Api.Models.Rooms Classes RoomCreateModel RoomCreateModelExtensions RoomDetailModel RoomDetailModelExtensions"
  },
  "api/RaisedHands.Api.Models.Users.UserDetailModel.html": {
    "href": "api/RaisedHands.Api.Models.Users.UserDetailModel.html",
    "title": "Class UserDetailModel | RaisedHands",
    "keywords": "Class UserDetailModel Namespace RaisedHands.Api.Models.Users Assembly RaisedHands.Api.dll public class UserDetailModel Inheritance object UserDetailModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FirstName public string FirstName { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid LastName public string LastName { get; set; } Property Value string"
  },
  "api/RaisedHands.Api.Models.Users.UserDetailModelExtensions.html": {
    "href": "api/RaisedHands.Api.Models.Users.UserDetailModelExtensions.html",
    "title": "Class UserDetailModelExtensions | RaisedHands",
    "keywords": "Class UserDetailModelExtensions Namespace RaisedHands.Api.Models.Users Assembly RaisedHands.Api.dll public static class UserDetailModelExtensions Inheritance object UserDetailModelExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToDetail(User) public static UserDetailModel ToDetail(this User source) Parameters source User Returns UserDetailModel"
  },
  "api/RaisedHands.Api.Models.Users.html": {
    "href": "api/RaisedHands.Api.Models.Users.html",
    "title": "Namespace RaisedHands.Api.Models.Users | RaisedHands",
    "keywords": "Namespace RaisedHands.Api.Models.Users Classes UserDetailModel UserDetailModelExtensions"
  },
  "api/RaisedHands.Api.Models.html": {
    "href": "api/RaisedHands.Api.Models.html",
    "title": "Namespace RaisedHands.Api.Models | RaisedHands",
    "keywords": "Namespace RaisedHands.Api.Models Classes IdNameModel"
  },
  "api/RaisedHands.Api.Program.html": {
    "href": "api/RaisedHands.Api.Program.html",
    "title": "Class Program | RaisedHands",
    "keywords": "Class Program Namespace RaisedHands.Api Assembly RaisedHands.Api.dll public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Main(string[]) public static void Main(string[] args) Parameters args string[]"
  },
  "api/RaisedHands.Api.Services.EmailSenderService.html": {
    "href": "api/RaisedHands.Api.Services.EmailSenderService.html",
    "title": "Class EmailSenderService | RaisedHands",
    "keywords": "Class EmailSenderService Namespace RaisedHands.Api.Services Assembly RaisedHands.Api.dll public class EmailSenderService Inheritance object EmailSenderService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EmailSenderService(IClock, AppDbContext, IOptionsSnapshot<SmtpSettings>) public EmailSenderService(IClock clock, AppDbContext dbContext, IOptionsSnapshot<SmtpSettings> smtpSettings) Parameters clock IClock dbContext AppDbContext smtpSettings IOptionsSnapshot<SmtpSettings> Methods AddEmailToSendAsync(string, string, string) public Task AddEmailToSendAsync(string receiver, string subject, string body) Parameters receiver string subject string body string Returns Task SendEmailsAsync() public Task SendEmailsAsync() Returns Task"
  },
  "api/RaisedHands.Api.Services.html": {
    "href": "api/RaisedHands.Api.Services.html",
    "title": "Namespace RaisedHands.Api.Services | RaisedHands",
    "keywords": "Namespace RaisedHands.Api.Services Classes EmailSenderService"
  },
  "api/RaisedHands.Api.Settings.SmtpSettings.html": {
    "href": "api/RaisedHands.Api.Settings.SmtpSettings.html",
    "title": "Class SmtpSettings | RaisedHands",
    "keywords": "Class SmtpSettings Namespace RaisedHands.Api.Settings Assembly RaisedHands.Api.dll public class SmtpSettings Inheritance object SmtpSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Host public string Host { get; set; } Property Value string Password public string Password { get; set; } Property Value string Port public int Port { get; set; } Property Value int Sender public string Sender { get; set; } Property Value string UserName public string UserName { get; set; } Property Value string"
  },
  "api/RaisedHands.Api.Settings.html": {
    "href": "api/RaisedHands.Api.Settings.html",
    "title": "Namespace RaisedHands.Api.Settings | RaisedHands",
    "keywords": "Namespace RaisedHands.Api.Settings Classes SmtpSettings"
  },
  "api/RaisedHands.Api.Utilities.ClaimsPrincipalExtensions.html": {
    "href": "api/RaisedHands.Api.Utilities.ClaimsPrincipalExtensions.html",
    "title": "Class ClaimsPrincipalExtensions | RaisedHands",
    "keywords": "Class ClaimsPrincipalExtensions Namespace RaisedHands.Api.Utilities Assembly RaisedHands.Data.dll public static class ClaimsPrincipalExtensions Inheritance object ClaimsPrincipalExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetName(ClaimsPrincipal) public static string GetName(this ClaimsPrincipal user) Parameters user ClaimsPrincipal Returns string GetUserId(ClaimsPrincipal) public static Guid GetUserId(this ClaimsPrincipal user) Parameters user ClaimsPrincipal Returns Guid"
  },
  "api/RaisedHands.Api.Utilities.html": {
    "href": "api/RaisedHands.Api.Utilities.html",
    "title": "Namespace RaisedHands.Api.Utilities | RaisedHands",
    "keywords": "Namespace RaisedHands.Api.Utilities Classes ClaimsPrincipalExtensions"
  },
  "api/RaisedHands.Api.html": {
    "href": "api/RaisedHands.Api.html",
    "title": "Namespace RaisedHands.Api | RaisedHands",
    "keywords": "Namespace RaisedHands.Api Classes Program"
  },
  "api/RaisedHands.Data.AppDbContext.html": {
    "href": "api/RaisedHands.Data.AppDbContext.html",
    "title": "Class AppDbContext | RaisedHands",
    "keywords": "Class AppDbContext Namespace RaisedHands.Data Assembly RaisedHands.Data.dll public class AppDbContext : IdentityDbContext<User, Role, Guid, IdentityUserClaim<Guid>, UserRole, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>>, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext IdentityUserContext<User, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>> IdentityDbContext<User, Role, Guid, IdentityUserClaim<Guid>, UserRole, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>> AppDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members IdentityDbContext<User, Role, Guid, IdentityUserClaim<Guid>, UserRole, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>>.OnModelCreating(ModelBuilder) IdentityDbContext<User, Role, Guid, IdentityUserClaim<Guid>, UserRole, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>>.UserRoles IdentityDbContext<User, Role, Guid, IdentityUserClaim<Guid>, UserRole, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>>.Roles IdentityDbContext<User, Role, Guid, IdentityUserClaim<Guid>, UserRole, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>>.RoleClaims IdentityUserContext<User, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.OnModelCreating(ModelBuilder) IdentityUserContext<User, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.Users IdentityUserContext<User, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.UserClaims IdentityUserContext<User, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.UserLogins IdentityUserContext<User, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.UserTokens IdentityUserContext<User, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.SchemaVersion DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppDbContext(DbContextOptions) public AppDbContext(DbContextOptions options) Parameters options DbContextOptions Properties Emails public DbSet<Email> Emails { get; set; } Property Value DbSet<Email> Groups public DbSet<Group> Groups { get; set; } Property Value DbSet<Group> Hands public DbSet<Hand> Hands { get; set; } Property Value DbSet<Hand> Questions public DbSet<Question> Questions { get; set; } Property Value DbSet<Question> Rooms public DbSet<Room> Rooms { get; set; } Property Value DbSet<Room> UserGroups public DbSet<UserRoleGroup> UserGroups { get; set; } Property Value DbSet<UserRoleGroup> Methods OnModelCreating(ModelBuilder) Configures the schema needed for the identity framework. protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder"
  },
  "api/RaisedHands.Data.Entities.Email.html": {
    "href": "api/RaisedHands.Data.Entities.Email.html",
    "title": "Class Email | RaisedHands",
    "keywords": "Class Email Namespace RaisedHands.Data.Entities Assembly RaisedHands.Data.dll [Table(\"Email\")] public class Email : ITrackable Inheritance object Email Implements ITrackable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ITrackableExtensions.SetCreateBySystem<T>(T, Instant) ITrackableExtensions.SetCreateBy<T>(T, string, Instant) ITrackableExtensions.SetDeleteBySystem<T>(T, Instant) ITrackableExtensions.SetDeleteBy<T>(T, string, Instant) ITrackableExtensions.SetModifyBySystem<T>(T, Instant) ITrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties Body public string Body { get; set; } Property Value string CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string Receiver public string Receiver { get; set; } Property Value string ScheduledAt public Instant ScheduledAt { get; set; } Property Value Instant Sender public string Sender { get; set; } Property Value string SentAt public Instant? SentAt { get; set; } Property Value Instant? Subject public string Subject { get; set; } Property Value string"
  },
  "api/RaisedHands.Data.Entities.Group.html": {
    "href": "api/RaisedHands.Data.Entities.Group.html",
    "title": "Class Group | RaisedHands",
    "keywords": "Class Group Namespace RaisedHands.Data.Entities Assembly RaisedHands.Data.dll public class Group : ITrackable Inheritance object Group Implements ITrackable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ITrackableExtensions.SetCreateBySystem<T>(T, Instant) ITrackableExtensions.SetCreateBy<T>(T, string, Instant) ITrackableExtensions.SetDeleteBySystem<T>(T, Instant) ITrackableExtensions.SetDeleteBy<T>(T, string, Instant) ITrackableExtensions.SetModifyBySystem<T>(T, Instant) ITrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties Code public string Code { get; set; } Property Value string CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string Name public string Name { get; set; } Property Value string Owner public User Owner { get; set; } Property Value User OwnerId public Guid OwnerId { get; set; } Property Value Guid Rooms public ICollection<Room> Rooms { get; set; } Property Value ICollection<Room> UserGroups public ICollection<UserRoleGroup> UserGroups { get; set; } Property Value ICollection<UserRoleGroup>"
  },
  "api/RaisedHands.Data.Entities.GroupExtensions.html": {
    "href": "api/RaisedHands.Data.Entities.GroupExtensions.html",
    "title": "Class GroupExtensions | RaisedHands",
    "keywords": "Class GroupExtensions Namespace RaisedHands.Data.Entities Assembly RaisedHands.Data.dll public static class GroupExtensions Inheritance object GroupExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FilterDeleted(IQueryable<Group>) public static IQueryable<Group> FilterDeleted(this IQueryable<Group> query) Parameters query IQueryable<Group> Returns IQueryable<Group>"
  },
  "api/RaisedHands.Data.Entities.Hand.html": {
    "href": "api/RaisedHands.Data.Entities.Hand.html",
    "title": "Class Hand | RaisedHands",
    "keywords": "Class Hand Namespace RaisedHands.Data.Entities Assembly RaisedHands.Data.dll public class Hand Inheritance object Hand Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Answered public bool Answered { get; set; } Property Value bool DateTime public DateTime DateTime { get; set; } Property Value DateTime Id public Guid Id { get; set; } Property Value Guid Room public Room Room { get; set; } Property Value Room RoomId public Guid RoomId { get; set; } Property Value Guid UserRoleGroup public UserRoleGroup UserRoleGroup { get; set; } Property Value UserRoleGroup UserRoleGroupId public Guid UserRoleGroupId { get; set; } Property Value Guid"
  },
  "api/RaisedHands.Data.Entities.Question.html": {
    "href": "api/RaisedHands.Data.Entities.Question.html",
    "title": "Class Question | RaisedHands",
    "keywords": "Class Question Namespace RaisedHands.Data.Entities Assembly RaisedHands.Data.dll public class Question Inheritance object Question Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Answered public bool Answered { get; set; } Property Value bool DateTime public DateTime DateTime { get; set; } Property Value DateTime Id public Guid Id { get; set; } Property Value Guid IsAnonymous public bool IsAnonymous { get; set; } Property Value bool Room public Room Room { get; set; } Property Value Room RoomId public Guid RoomId { get; set; } Property Value Guid Text public string Text { get; set; } Property Value string UserRoleGroup public UserRoleGroup? UserRoleGroup { get; set; } Property Value UserRoleGroup UserRoleGroupId public Guid? UserRoleGroupId { get; set; } Property Value Guid?"
  },
  "api/RaisedHands.Data.Entities.Role.html": {
    "href": "api/RaisedHands.Data.Entities.Role.html",
    "title": "Class Role | RaisedHands",
    "keywords": "Class Role Namespace RaisedHands.Data.Entities Assembly RaisedHands.Data.dll public class Role : IdentityRole<Guid> Inheritance object IdentityRole<Guid> Role Inherited Members IdentityRole<Guid>.ToString() IdentityRole<Guid>.Id IdentityRole<Guid>.Name IdentityRole<Guid>.NormalizedName IdentityRole<Guid>.ConcurrencyStamp object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Users public ICollection<UserRole> Users { get; set; } Property Value ICollection<UserRole>"
  },
  "api/RaisedHands.Data.Entities.Room.html": {
    "href": "api/RaisedHands.Data.Entities.Room.html",
    "title": "Class Room | RaisedHands",
    "keywords": "Class Room Namespace RaisedHands.Data.Entities Assembly RaisedHands.Data.dll public class Room : ITrackable Inheritance object Room Implements ITrackable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ITrackableExtensions.SetCreateBySystem<T>(T, Instant) ITrackableExtensions.SetCreateBy<T>(T, string, Instant) ITrackableExtensions.SetDeleteBySystem<T>(T, Instant) ITrackableExtensions.SetDeleteBy<T>(T, string, Instant) ITrackableExtensions.SetModifyBySystem<T>(T, Instant) ITrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string DateTime public DateTime DateTime { get; set; } Property Value DateTime DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string EndDate public DateTime? EndDate { get; set; } Property Value DateTime? Group public Group Group { get; set; } Property Value Group GroupId public Guid GroupId { get; set; } Property Value Guid Id public Guid Id { get; set; } Property Value Guid ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string Name public string Name { get; set; } Property Value string"
  },
  "api/RaisedHands.Data.Entities.RoomExtensions.html": {
    "href": "api/RaisedHands.Data.Entities.RoomExtensions.html",
    "title": "Class RoomExtensions | RaisedHands",
    "keywords": "Class RoomExtensions Namespace RaisedHands.Data.Entities Assembly RaisedHands.Data.dll public static class RoomExtensions Inheritance object RoomExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FilterDeleted(IQueryable<Room>) public static IQueryable<Room> FilterDeleted(this IQueryable<Room> query) Parameters query IQueryable<Room> Returns IQueryable<Room>"
  },
  "api/RaisedHands.Data.Entities.User.html": {
    "href": "api/RaisedHands.Data.Entities.User.html",
    "title": "Class User | RaisedHands",
    "keywords": "Class User Namespace RaisedHands.Data.Entities Assembly RaisedHands.Data.dll [Table(\"User\")] public class User : IdentityUser<Guid>, ITrackable Inheritance object IdentityUser<Guid> User Implements ITrackable Inherited Members IdentityUser<Guid>.ToString() IdentityUser<Guid>.Id IdentityUser<Guid>.UserName IdentityUser<Guid>.NormalizedUserName IdentityUser<Guid>.Email IdentityUser<Guid>.NormalizedEmail IdentityUser<Guid>.EmailConfirmed IdentityUser<Guid>.PasswordHash IdentityUser<Guid>.SecurityStamp IdentityUser<Guid>.ConcurrencyStamp IdentityUser<Guid>.PhoneNumber IdentityUser<Guid>.PhoneNumberConfirmed IdentityUser<Guid>.TwoFactorEnabled IdentityUser<Guid>.LockoutEnd IdentityUser<Guid>.LockoutEnabled IdentityUser<Guid>.AccessFailedCount object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ITrackableExtensions.SetCreateBySystem<T>(T, Instant) ITrackableExtensions.SetCreateBy<T>(T, string, Instant) ITrackableExtensions.SetDeleteBySystem<T>(T, Instant) ITrackableExtensions.SetDeleteBy<T>(T, string, Instant) ITrackableExtensions.SetModifyBySystem<T>(T, Instant) ITrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string FirstName public string FirstName { get; set; } Property Value string LastName public string LastName { get; set; } Property Value string ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string Roles public ICollection<UserRole> Roles { get; set; } Property Value ICollection<UserRole>"
  },
  "api/RaisedHands.Data.Entities.UserRole.html": {
    "href": "api/RaisedHands.Data.Entities.UserRole.html",
    "title": "Class UserRole | RaisedHands",
    "keywords": "Class UserRole Namespace RaisedHands.Data.Entities Assembly RaisedHands.Data.dll public class UserRole : IdentityUserRole<Guid> Inheritance object IdentityUserRole<Guid> UserRole Inherited Members IdentityUserRole<Guid>.UserId IdentityUserRole<Guid>.RoleId object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id [Key] public Guid Id { get; set; } Property Value Guid Role public Role Role { get; set; } Property Value Role User public User User { get; set; } Property Value User UserGroups public ICollection<UserRoleGroup> UserGroups { get; set; } Property Value ICollection<UserRoleGroup>"
  },
  "api/RaisedHands.Data.Entities.UserRoleGroup.html": {
    "href": "api/RaisedHands.Data.Entities.UserRoleGroup.html",
    "title": "Class UserRoleGroup | RaisedHands",
    "keywords": "Class UserRoleGroup Namespace RaisedHands.Data.Entities Assembly RaisedHands.Data.dll public class UserRoleGroup Inheritance object UserRoleGroup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Group public Group Group { get; set; } Property Value Group GroupId public Guid GroupId { get; set; } Property Value Guid Id public Guid Id { get; set; } Property Value Guid UserRole public UserRole UserRole { get; set; } Property Value UserRole UserRoleId public Guid UserRoleId { get; set; } Property Value Guid"
  },
  "api/RaisedHands.Data.Entities.html": {
    "href": "api/RaisedHands.Data.Entities.html",
    "title": "Namespace RaisedHands.Data.Entities | RaisedHands",
    "keywords": "Namespace RaisedHands.Data.Entities Classes Email Group GroupExtensions Hand Question Role Room RoomExtensions User UserRole UserRoleGroup"
  },
  "api/RaisedHands.Data.Interfaces.ITrackable.html": {
    "href": "api/RaisedHands.Data.Interfaces.ITrackable.html",
    "title": "Interface ITrackable | RaisedHands",
    "keywords": "Interface ITrackable Namespace RaisedHands.Data.Interfaces Assembly RaisedHands.Data.dll public interface ITrackable Extension Methods ITrackableExtensions.SetCreateBySystem<T>(T, Instant) ITrackableExtensions.SetCreateBy<T>(T, string, Instant) ITrackableExtensions.SetDeleteBySystem<T>(T, Instant) ITrackableExtensions.SetDeleteBy<T>(T, string, Instant) ITrackableExtensions.SetModifyBySystem<T>(T, Instant) ITrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties CreatedAt Instant CreatedAt { get; set; } Property Value Instant CreatedBy string CreatedBy { get; set; } Property Value string DeletedAt Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy string? DeletedBy { get; set; } Property Value string ModifiedAt Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy string ModifiedBy { get; set; } Property Value string"
  },
  "api/RaisedHands.Data.Interfaces.ITrackableExtensions.html": {
    "href": "api/RaisedHands.Data.Interfaces.ITrackableExtensions.html",
    "title": "Class ITrackableExtensions | RaisedHands",
    "keywords": "Class ITrackableExtensions Namespace RaisedHands.Data.Interfaces Assembly RaisedHands.Data.dll public static class ITrackableExtensions Inheritance object ITrackableExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetCreateBySystem<T>(T, Instant) public static T SetCreateBySystem<T>(this T trackable, Instant now) where T : class, ITrackable Parameters trackable T now Instant Returns T Type Parameters T SetCreateBy<T>(T, string, Instant) public static T SetCreateBy<T>(this T trackable, string author, Instant now) where T : class, ITrackable Parameters trackable T author string now Instant Returns T Type Parameters T SetDeleteBySystem<T>(T, Instant) public static T SetDeleteBySystem<T>(this T trackable, Instant now) where T : class, ITrackable Parameters trackable T now Instant Returns T Type Parameters T SetDeleteBy<T>(T, string, Instant) public static T SetDeleteBy<T>(this T trackable, string author, Instant now) where T : class, ITrackable Parameters trackable T author string now Instant Returns T Type Parameters T SetModifyBySystem<T>(T, Instant) public static T SetModifyBySystem<T>(this T trackable, Instant now) where T : class, ITrackable Parameters trackable T now Instant Returns T Type Parameters T SetModifyBy<T>(T, string, Instant) public static T SetModifyBy<T>(this T trackable, string author, Instant now) where T : class, ITrackable Parameters trackable T author string now Instant Returns T Type Parameters T"
  },
  "api/RaisedHands.Data.Interfaces.html": {
    "href": "api/RaisedHands.Data.Interfaces.html",
    "title": "Namespace RaisedHands.Data.Interfaces | RaisedHands",
    "keywords": "Namespace RaisedHands.Data.Interfaces Classes ITrackableExtensions Interfaces ITrackable"
  },
  "api/RaisedHands.Data.Migrations.Init.html": {
    "href": "api/RaisedHands.Data.Migrations.Init.html",
    "title": "Class Init | RaisedHands",
    "keywords": "Class Init Namespace RaisedHands.Data.Migrations Assembly RaisedHands.Data.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241211093427_Init\")] public class Init : Migration Inheritance object Migration Init Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/RaisedHands.Data.Migrations.html": {
    "href": "api/RaisedHands.Data.Migrations.html",
    "title": "Namespace RaisedHands.Data.Migrations | RaisedHands",
    "keywords": "Namespace RaisedHands.Data.Migrations Classes Init A base class inherited by each EF Core migration."
  },
  "api/RaisedHands.Data.html": {
    "href": "api/RaisedHands.Data.html",
    "title": "Namespace RaisedHands.Data | RaisedHands",
    "keywords": "Namespace RaisedHands.Data Classes AppDbContext"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | RaisedHands",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | RaisedHands",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | RaisedHands",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}